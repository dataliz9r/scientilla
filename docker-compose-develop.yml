version: '2'

services:
  node:
    build: ./docker/node
    restart: always
    volumes:
      - ./old:/usr/src/app
    ports:
      - "8088:1337"
      - "35732:35732"
      - "5858:5858"
    environment:
      - NODE_ENV=development
    command: sails lift
    extra_hosts:
      #- "api.elsevier.com:10.255.9.84"
      - "scopus-cache.iit.local:10.255.9.84"
      - "scientilla.iit.dev:127.0.0.1"
    user: "1000"
    depends_on:
      - db

  web:
    build: ./docker/web
    restart: always
    volumes:
      - ./web:/usr/src/app
    ports:
      - "8084:1337"
    command: nodemon app.js
    extra_hosts:
      - "scopus-cache.iit.local:10.255.9.84"
      - "scientilla.iit.dev:127.0.0.1"
    user: "1000"
    depends_on:
      - node
      - db

  db:
    image: postgres:10
    restart: always
    volumes:
      - scientillapgdata:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: scientilla
      POSTGRES_USER: scientilla
      POSTGRES_PASSWORD: scientillapassword

  test:
    build: ./docker/node
    volumes:
      - ./old:/usr/src/app
    command: npm test
    environment:
      - NODE_ENV=test
    depends_on:
      - testdb
      - testnode
      - testweb

  testnode:
    build: ./docker/node
    volumes:
      - ./old:/usr/src/app
    environment:
      - NODE_ENV=test
    command: node app.js
    depends_on:
      - testdb

  testweb:
    build: ./docker/web
    volumes:
      - ./web:/usr/src/app
    ports:
      - "8085:1337"
    command: node app.js
    environment:
      - NODE_ENV=test
    depends_on:
      - testnode
      - testdb

  testdb:
    image: postgres:10
    environment:
      POSTGRES_DB: scientilla
      POSTGRES_USER: scientilla
      POSTGRES_PASSWORD: scientillapassword

volumes:
  scientillapgdata: